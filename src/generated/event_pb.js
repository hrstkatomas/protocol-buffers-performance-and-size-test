// source: event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.eventFeed.v1.Event', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eventFeed.v1.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.eventFeed.v1.Event.repeatedFields_, null);
};
goog.inherits(proto.eventFeed.v1.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eventFeed.v1.Event.displayName = 'proto.eventFeed.v1.Event';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.eventFeed.v1.Event.repeatedFields_ = [35,36,37,38];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eventFeed.v1.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.eventFeed.v1.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eventFeed.v1.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eventFeed.v1.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    homeCurrentResult: jspb.Message.getFieldWithDefault(msg, 1, 0),
    awayCurrentResult: jspb.Message.getFieldWithDefault(msg, 2, 0),
    live: jspb.Message.getFieldWithDefault(msg, 3, ""),
    homeRedCardCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    awayRedCardCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    hasTvOrLivestreaming: jspb.Message.getFieldWithDefault(msg, 6, ""),
    infoNotice: jspb.Message.getFieldWithDefault(msg, 7, ""),
    hasLiveBetting: jspb.Message.getFieldWithDefault(msg, 8, ""),
    periodStartUtime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    matchEndUtime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    periodUpdateUtime: jspb.Message.getFieldWithDefault(msg, 11, 0),
    assists: jspb.Message.getFieldWithDefault(msg, 12, 0),
    homeFullTimeResult: jspb.Message.getFieldWithDefault(msg, 13, 0),
    awayFullTimeResult: jspb.Message.getFieldWithDefault(msg, 14, 0),
    highlights: jspb.Message.getFieldWithDefault(msg, 15, ""),
    hasLiveCentre: jspb.Message.getFieldWithDefault(msg, 16, ""),
    hasLineups: jspb.Message.getFieldWithDefault(msg, 17, 0),
    hasOddsComparison: jspb.Message.getFieldWithDefault(msg, 18, ""),
    ftWinner: jspb.Message.getFieldWithDefault(msg, 19, ""),
    homeResultPeriod1: jspb.Message.getFieldWithDefault(msg, 20, ""),
    awayResultPeriod1: jspb.Message.getFieldWithDefault(msg, 21, ""),
    sourceTypeOfGame: jspb.Message.getFieldWithDefault(msg, 22, 0),
    homeDrawParticipantWinner: jspb.Message.getFieldWithDefault(msg, 23, 0),
    awayDrawParticipantWinner: jspb.Message.getFieldWithDefault(msg, 24, 0),
    homeParticipantCountryId: jspb.Message.getFieldWithDefault(msg, 25, 0),
    awayParticipantCountryId: jspb.Message.getFieldWithDefault(msg, 26, 0),
    oddsWinner: jspb.Message.getFloatingPointFieldWithDefault(msg, 27, 0.0),
    oddsTop10: jspb.Message.getFloatingPointFieldWithDefault(msg, 28, 0.0),
    oddsWinnerPrevious: jspb.Message.getFloatingPointFieldWithDefault(msg, 29, 0.0),
    oddsTop10Previous: jspb.Message.getFloatingPointFieldWithDefault(msg, 30, 0.0),
    inactiveOdds: jspb.Message.getFieldWithDefault(msg, 31, ""),
    homeScoresChanged: jspb.Message.getFieldWithDefault(msg, 32, 0),
    awayScoresChanged: jspb.Message.getFieldWithDefault(msg, 33, 0),
    swappedParticipants: jspb.Message.getFieldWithDefault(msg, 34, 0),
    homePenaltyShotList: (f = jspb.Message.getRepeatedField(msg, 35)) == null ? undefined : f,
    awayPenaltyShotList: (f = jspb.Message.getRepeatedField(msg, 36)) == null ? undefined : f,
    homePenaltyMissedList: (f = jspb.Message.getRepeatedField(msg, 37)) == null ? undefined : f,
    awayPenaltyMissedList: (f = jspb.Message.getRepeatedField(msg, 38)) == null ? undefined : f,
    oddsTop5: jspb.Message.getFloatingPointFieldWithDefault(msg, 39, 0.0),
    oddsTop5Previous: jspb.Message.getFloatingPointFieldWithDefault(msg, 40, 0.0),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 41, false),
    originalId: jspb.Message.getFieldWithDefault(msg, 42, ""),
    labelId: jspb.Message.getFieldWithDefault(msg, 43, ""),
    sportId: jspb.Message.getFieldWithDefault(msg, 44, ""),
    sport: jspb.Message.getFieldWithDefault(msg, 45, ""),
    matchStartUtime: jspb.Message.getFieldWithDefault(msg, 46, 0),
    eventStartUtime: jspb.Message.getFieldWithDefault(msg, 47, 0),
    eventStageTypeId: jspb.Message.getFieldWithDefault(msg, 48, 0),
    eventStageTypeFromEventStageId: jspb.Message.getFieldWithDefault(msg, 49, 0),
    eventStageId: jspb.Message.getFieldWithDefault(msg, 50, 0),
    sortParticipant: jspb.Message.getFieldWithDefault(msg, 51, ""),
    cricketVisibleRunRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 52, 0.0),
    gameTime: jspb.Message.getFieldWithDefault(msg, 53, ""),
    playingOnSets: jspb.Message.getFieldWithDefault(msg, 54, ""),
    cricketRecentOvers: jspb.Message.getFieldWithDefault(msg, 55, ""),
    home3charName: jspb.Message.getFieldWithDefault(msg, 56, ""),
    homeParticipantName: jspb.Message.getFieldWithDefault(msg, 57, ""),
    homeFirstParticipantName: jspb.Message.getFieldWithDefault(msg, 58, ""),
    homeEventParticipantId: jspb.Message.getFieldWithDefault(msg, 59, ""),
    homeGoalUnderReview: jspb.Message.getFieldWithDefault(msg, 60, 0),
    bettingType: jspb.Message.getFieldWithDefault(msg, 61, ""),
    away3charName: jspb.Message.getFieldWithDefault(msg, 62, ""),
    awayParticipantName: jspb.Message.getFieldWithDefault(msg, 63, ""),
    awayFirstParticipantName: jspb.Message.getFieldWithDefault(msg, 64, ""),
    awayEventParticipantId: jspb.Message.getFieldWithDefault(msg, 65, ""),
    awayGoalUnderReview: jspb.Message.getFieldWithDefault(msg, 66, 0),
    oddsScope: jspb.Message.getFieldWithDefault(msg, 67, ""),
    bookmakerListLiveInOffer: jspb.Message.getFieldWithDefault(msg, 68, ""),
    sortKeyStr: jspb.Message.getFieldWithDefault(msg, 69, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eventFeed.v1.Event}
 */
proto.eventFeed.v1.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eventFeed.v1.Event;
  return proto.eventFeed.v1.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eventFeed.v1.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eventFeed.v1.Event}
 */
proto.eventFeed.v1.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHomeCurrentResult(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAwayCurrentResult(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLive(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHomeRedCardCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAwayRedCardCount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHasTvOrLivestreaming(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfoNotice(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setHasLiveBetting(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPeriodStartUtime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMatchEndUtime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPeriodUpdateUtime(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAssists(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHomeFullTimeResult(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAwayFullTimeResult(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setHighlights(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setHasLiveCentre(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHasLineups(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setHasOddsComparison(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setFtWinner(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomeResultPeriod1(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setAwayResultPeriod1(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSourceTypeOfGame(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHomeDrawParticipantWinner(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAwayDrawParticipantWinner(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHomeParticipantCountryId(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAwayParticipantCountryId(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOddsWinner(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOddsTop10(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOddsWinnerPrevious(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOddsTop10Previous(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setInactiveOdds(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHomeScoresChanged(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAwayScoresChanged(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSwappedParticipants(value);
      break;
    case 35:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHomePenaltyShot(values[i]);
      }
      break;
    case 36:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAwayPenaltyShot(values[i]);
      }
      break;
    case 37:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHomePenaltyMissed(values[i]);
      }
      break;
    case 38:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAwayPenaltyMissed(values[i]);
      }
      break;
    case 39:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOddsTop5(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOddsTop5Previous(value);
      break;
    case 41:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalId(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelId(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.setSportId(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.setSport(value);
      break;
    case 46:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMatchStartUtime(value);
      break;
    case 47:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEventStartUtime(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventStageTypeId(value);
      break;
    case 49:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventStageTypeFromEventStageId(value);
      break;
    case 50:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventStageId(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortParticipant(value);
      break;
    case 52:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCricketVisibleRunRate(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameTime(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayingOnSets(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.setCricketRecentOvers(value);
      break;
    case 56:
      var value = /** @type {string} */ (reader.readString());
      msg.setHome3charName(value);
      break;
    case 57:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomeParticipantName(value);
      break;
    case 58:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomeFirstParticipantName(value);
      break;
    case 59:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomeEventParticipantId(value);
      break;
    case 60:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHomeGoalUnderReview(value);
      break;
    case 61:
      var value = /** @type {string} */ (reader.readString());
      msg.setBettingType(value);
      break;
    case 62:
      var value = /** @type {string} */ (reader.readString());
      msg.setAway3charName(value);
      break;
    case 63:
      var value = /** @type {string} */ (reader.readString());
      msg.setAwayParticipantName(value);
      break;
    case 64:
      var value = /** @type {string} */ (reader.readString());
      msg.setAwayFirstParticipantName(value);
      break;
    case 65:
      var value = /** @type {string} */ (reader.readString());
      msg.setAwayEventParticipantId(value);
      break;
    case 66:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAwayGoalUnderReview(value);
      break;
    case 67:
      var value = /** @type {string} */ (reader.readString());
      msg.setOddsScope(value);
      break;
    case 68:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmakerListLiveInOffer(value);
      break;
    case 69:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortKeyStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eventFeed.v1.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eventFeed.v1.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eventFeed.v1.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eventFeed.v1.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHomeCurrentResult();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAwayCurrentResult();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLive();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHomeRedCardCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAwayRedCardCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getHasTvOrLivestreaming();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInfoNotice();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHasLiveBetting();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPeriodStartUtime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getMatchEndUtime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getPeriodUpdateUtime();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getAssists();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getHomeFullTimeResult();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getAwayFullTimeResult();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getHighlights();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getHasLiveCentre();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getHasLineups();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getHasOddsComparison();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getFtWinner();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getHomeResultPeriod1();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getAwayResultPeriod1();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getSourceTypeOfGame();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getHomeDrawParticipantWinner();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getAwayDrawParticipantWinner();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
  f = message.getHomeParticipantCountryId();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getAwayParticipantCountryId();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getOddsWinner();
  if (f !== 0.0) {
    writer.writeFloat(
      27,
      f
    );
  }
  f = message.getOddsTop10();
  if (f !== 0.0) {
    writer.writeFloat(
      28,
      f
    );
  }
  f = message.getOddsWinnerPrevious();
  if (f !== 0.0) {
    writer.writeFloat(
      29,
      f
    );
  }
  f = message.getOddsTop10Previous();
  if (f !== 0.0) {
    writer.writeFloat(
      30,
      f
    );
  }
  f = message.getInactiveOdds();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getHomeScoresChanged();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getAwayScoresChanged();
  if (f !== 0) {
    writer.writeInt32(
      33,
      f
    );
  }
  f = message.getSwappedParticipants();
  if (f !== 0) {
    writer.writeInt32(
      34,
      f
    );
  }
  f = message.getHomePenaltyShotList();
  if (f.length > 0) {
    writer.writePackedInt32(
      35,
      f
    );
  }
  f = message.getAwayPenaltyShotList();
  if (f.length > 0) {
    writer.writePackedInt32(
      36,
      f
    );
  }
  f = message.getHomePenaltyMissedList();
  if (f.length > 0) {
    writer.writePackedInt32(
      37,
      f
    );
  }
  f = message.getAwayPenaltyMissedList();
  if (f.length > 0) {
    writer.writePackedInt32(
      38,
      f
    );
  }
  f = message.getOddsTop5();
  if (f !== 0.0) {
    writer.writeFloat(
      39,
      f
    );
  }
  f = message.getOddsTop5Previous();
  if (f !== 0.0) {
    writer.writeFloat(
      40,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      41,
      f
    );
  }
  f = message.getOriginalId();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getLabelId();
  if (f.length > 0) {
    writer.writeString(
      43,
      f
    );
  }
  f = message.getSportId();
  if (f.length > 0) {
    writer.writeString(
      44,
      f
    );
  }
  f = message.getSport();
  if (f.length > 0) {
    writer.writeString(
      45,
      f
    );
  }
  f = message.getMatchStartUtime();
  if (f !== 0) {
    writer.writeInt64(
      46,
      f
    );
  }
  f = message.getEventStartUtime();
  if (f !== 0) {
    writer.writeInt64(
      47,
      f
    );
  }
  f = message.getEventStageTypeId();
  if (f !== 0) {
    writer.writeInt32(
      48,
      f
    );
  }
  f = message.getEventStageTypeFromEventStageId();
  if (f !== 0) {
    writer.writeInt32(
      49,
      f
    );
  }
  f = message.getEventStageId();
  if (f !== 0) {
    writer.writeInt32(
      50,
      f
    );
  }
  f = message.getSortParticipant();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getCricketVisibleRunRate();
  if (f !== 0.0) {
    writer.writeFloat(
      52,
      f
    );
  }
  f = message.getGameTime();
  if (f.length > 0) {
    writer.writeString(
      53,
      f
    );
  }
  f = message.getPlayingOnSets();
  if (f.length > 0) {
    writer.writeString(
      54,
      f
    );
  }
  f = message.getCricketRecentOvers();
  if (f.length > 0) {
    writer.writeString(
      55,
      f
    );
  }
  f = message.getHome3charName();
  if (f.length > 0) {
    writer.writeString(
      56,
      f
    );
  }
  f = message.getHomeParticipantName();
  if (f.length > 0) {
    writer.writeString(
      57,
      f
    );
  }
  f = message.getHomeFirstParticipantName();
  if (f.length > 0) {
    writer.writeString(
      58,
      f
    );
  }
  f = message.getHomeEventParticipantId();
  if (f.length > 0) {
    writer.writeString(
      59,
      f
    );
  }
  f = message.getHomeGoalUnderReview();
  if (f !== 0) {
    writer.writeInt32(
      60,
      f
    );
  }
  f = message.getBettingType();
  if (f.length > 0) {
    writer.writeString(
      61,
      f
    );
  }
  f = message.getAway3charName();
  if (f.length > 0) {
    writer.writeString(
      62,
      f
    );
  }
  f = message.getAwayParticipantName();
  if (f.length > 0) {
    writer.writeString(
      63,
      f
    );
  }
  f = message.getAwayFirstParticipantName();
  if (f.length > 0) {
    writer.writeString(
      64,
      f
    );
  }
  f = message.getAwayEventParticipantId();
  if (f.length > 0) {
    writer.writeString(
      65,
      f
    );
  }
  f = message.getAwayGoalUnderReview();
  if (f !== 0) {
    writer.writeInt32(
      66,
      f
    );
  }
  f = message.getOddsScope();
  if (f.length > 0) {
    writer.writeString(
      67,
      f
    );
  }
  f = message.getBookmakerListLiveInOffer();
  if (f.length > 0) {
    writer.writeString(
      68,
      f
    );
  }
  f = message.getSortKeyStr();
  if (f.length > 0) {
    writer.writeString(
      69,
      f
    );
  }
};


/**
 * optional int32 home_current_result = 1;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getHomeCurrentResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeCurrentResult = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 away_current_result = 2;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getAwayCurrentResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayCurrentResult = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string live = 3;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getLive = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setLive = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 home_red_card_count = 4;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getHomeRedCardCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeRedCardCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 away_red_card_count = 5;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getAwayRedCardCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayRedCardCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string has_tv_or_livestreaming = 6;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getHasTvOrLivestreaming = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHasTvOrLivestreaming = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string info_notice = 7;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getInfoNotice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setInfoNotice = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string has_live_betting = 8;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getHasLiveBetting = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHasLiveBetting = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 period_start_utime = 9;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getPeriodStartUtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setPeriodStartUtime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 match_end_utime = 10;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getMatchEndUtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setMatchEndUtime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 period_update_utime = 11;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getPeriodUpdateUtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setPeriodUpdateUtime = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 assists = 12;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getAssists = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAssists = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 home_full_time_result = 13;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getHomeFullTimeResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeFullTimeResult = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 away_full_time_result = 14;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getAwayFullTimeResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayFullTimeResult = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string highlights = 15;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getHighlights = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHighlights = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string has_live_centre = 16;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getHasLiveCentre = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHasLiveCentre = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional int32 has_lineups = 17;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getHasLineups = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHasLineups = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional string has_odds_comparison = 18;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getHasOddsComparison = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHasOddsComparison = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string ft_winner = 19;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getFtWinner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setFtWinner = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string home_result_period_1 = 20;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getHomeResultPeriod1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeResultPeriod1 = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string away_result_period_1 = 21;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getAwayResultPeriod1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayResultPeriod1 = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional int32 source_type_of_game = 22;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getSourceTypeOfGame = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setSourceTypeOfGame = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int32 home_draw_participant_winner = 23;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getHomeDrawParticipantWinner = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeDrawParticipantWinner = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int32 away_draw_participant_winner = 24;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getAwayDrawParticipantWinner = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayDrawParticipantWinner = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int32 home_participant_country_id = 25;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getHomeParticipantCountryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeParticipantCountryId = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 away_participant_country_id = 26;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getAwayParticipantCountryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayParticipantCountryId = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional float odds_winner = 27;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getOddsWinner = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 27, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setOddsWinner = function(value) {
  return jspb.Message.setProto3FloatField(this, 27, value);
};


/**
 * optional float odds_top_10 = 28;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getOddsTop10 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 28, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setOddsTop10 = function(value) {
  return jspb.Message.setProto3FloatField(this, 28, value);
};


/**
 * optional float odds_winner_previous = 29;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getOddsWinnerPrevious = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setOddsWinnerPrevious = function(value) {
  return jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional float odds_top_10_previous = 30;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getOddsTop10Previous = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 30, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setOddsTop10Previous = function(value) {
  return jspb.Message.setProto3FloatField(this, 30, value);
};


/**
 * optional string inactive_odds = 31;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getInactiveOdds = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setInactiveOdds = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional int32 home_scores_changed = 32;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getHomeScoresChanged = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeScoresChanged = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional int32 away_scores_changed = 33;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getAwayScoresChanged = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayScoresChanged = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional int32 swapped_participants = 34;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getSwappedParticipants = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setSwappedParticipants = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


/**
 * repeated int32 home_penalty_shot = 35;
 * @return {!Array<number>}
 */
proto.eventFeed.v1.Event.prototype.getHomePenaltyShotList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 35));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomePenaltyShotList = function(value) {
  return jspb.Message.setField(this, 35, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.addHomePenaltyShot = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 35, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.clearHomePenaltyShotList = function() {
  return this.setHomePenaltyShotList([]);
};


/**
 * repeated int32 away_penalty_shot = 36;
 * @return {!Array<number>}
 */
proto.eventFeed.v1.Event.prototype.getAwayPenaltyShotList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 36));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayPenaltyShotList = function(value) {
  return jspb.Message.setField(this, 36, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.addAwayPenaltyShot = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 36, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.clearAwayPenaltyShotList = function() {
  return this.setAwayPenaltyShotList([]);
};


/**
 * repeated int32 home_penalty_missed = 37;
 * @return {!Array<number>}
 */
proto.eventFeed.v1.Event.prototype.getHomePenaltyMissedList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 37));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomePenaltyMissedList = function(value) {
  return jspb.Message.setField(this, 37, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.addHomePenaltyMissed = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 37, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.clearHomePenaltyMissedList = function() {
  return this.setHomePenaltyMissedList([]);
};


/**
 * repeated int32 away_penalty_missed = 38;
 * @return {!Array<number>}
 */
proto.eventFeed.v1.Event.prototype.getAwayPenaltyMissedList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 38));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayPenaltyMissedList = function(value) {
  return jspb.Message.setField(this, 38, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.addAwayPenaltyMissed = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 38, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.clearAwayPenaltyMissedList = function() {
  return this.setAwayPenaltyMissedList([]);
};


/**
 * optional float odds_top_5 = 39;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getOddsTop5 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 39, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setOddsTop5 = function(value) {
  return jspb.Message.setProto3FloatField(this, 39, value);
};


/**
 * optional float odds_top_5_previous = 40;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getOddsTop5Previous = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 40, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setOddsTop5Previous = function(value) {
  return jspb.Message.setProto3FloatField(this, 40, value);
};


/**
 * optional bool is_valid = 41;
 * @return {boolean}
 */
proto.eventFeed.v1.Event.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 41, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 41, value);
};


/**
 * optional string original_id = 42;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getOriginalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setOriginalId = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional string label_id = 43;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getLabelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setLabelId = function(value) {
  return jspb.Message.setProto3StringField(this, 43, value);
};


/**
 * optional string sport_id = 44;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getSportId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 44, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setSportId = function(value) {
  return jspb.Message.setProto3StringField(this, 44, value);
};


/**
 * optional string sport = 45;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getSport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 45, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setSport = function(value) {
  return jspb.Message.setProto3StringField(this, 45, value);
};


/**
 * optional int64 match_start_utime = 46;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getMatchStartUtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 46, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setMatchStartUtime = function(value) {
  return jspb.Message.setProto3IntField(this, 46, value);
};


/**
 * optional int64 event_start_utime = 47;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getEventStartUtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 47, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setEventStartUtime = function(value) {
  return jspb.Message.setProto3IntField(this, 47, value);
};


/**
 * optional int32 event_stage_type_id = 48;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getEventStageTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 48, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setEventStageTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 48, value);
};


/**
 * optional int32 event_stage_type_from_event_stage_id = 49;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getEventStageTypeFromEventStageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 49, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setEventStageTypeFromEventStageId = function(value) {
  return jspb.Message.setProto3IntField(this, 49, value);
};


/**
 * optional int32 event_stage_id = 50;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getEventStageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setEventStageId = function(value) {
  return jspb.Message.setProto3IntField(this, 50, value);
};


/**
 * optional string sort_participant = 51;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getSortParticipant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setSortParticipant = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional float cricket_visible_run_rate = 52;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getCricketVisibleRunRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 52, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setCricketVisibleRunRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 52, value);
};


/**
 * optional string game_time = 53;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getGameTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setGameTime = function(value) {
  return jspb.Message.setProto3StringField(this, 53, value);
};


/**
 * optional string playing_on_sets = 54;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getPlayingOnSets = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 54, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setPlayingOnSets = function(value) {
  return jspb.Message.setProto3StringField(this, 54, value);
};


/**
 * optional string cricket_recent_overs = 55;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getCricketRecentOvers = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 55, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setCricketRecentOvers = function(value) {
  return jspb.Message.setProto3StringField(this, 55, value);
};


/**
 * optional string home_3char_name = 56;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getHome3charName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 56, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHome3charName = function(value) {
  return jspb.Message.setProto3StringField(this, 56, value);
};


/**
 * optional string home_participant_name = 57;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getHomeParticipantName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 57, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeParticipantName = function(value) {
  return jspb.Message.setProto3StringField(this, 57, value);
};


/**
 * optional string home_first_participant_name = 58;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getHomeFirstParticipantName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 58, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeFirstParticipantName = function(value) {
  return jspb.Message.setProto3StringField(this, 58, value);
};


/**
 * optional string home_event_participant_id = 59;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getHomeEventParticipantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 59, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeEventParticipantId = function(value) {
  return jspb.Message.setProto3StringField(this, 59, value);
};


/**
 * optional int32 home_goal_under_review = 60;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getHomeGoalUnderReview = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 60, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setHomeGoalUnderReview = function(value) {
  return jspb.Message.setProto3IntField(this, 60, value);
};


/**
 * optional string betting_type = 61;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getBettingType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 61, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setBettingType = function(value) {
  return jspb.Message.setProto3StringField(this, 61, value);
};


/**
 * optional string away_3char_name = 62;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getAway3charName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 62, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAway3charName = function(value) {
  return jspb.Message.setProto3StringField(this, 62, value);
};


/**
 * optional string away_participant_name = 63;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getAwayParticipantName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 63, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayParticipantName = function(value) {
  return jspb.Message.setProto3StringField(this, 63, value);
};


/**
 * optional string away_first_participant_name = 64;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getAwayFirstParticipantName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 64, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayFirstParticipantName = function(value) {
  return jspb.Message.setProto3StringField(this, 64, value);
};


/**
 * optional string away_event_participant_id = 65;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getAwayEventParticipantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 65, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayEventParticipantId = function(value) {
  return jspb.Message.setProto3StringField(this, 65, value);
};


/**
 * optional int32 away_goal_under_review = 66;
 * @return {number}
 */
proto.eventFeed.v1.Event.prototype.getAwayGoalUnderReview = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 66, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setAwayGoalUnderReview = function(value) {
  return jspb.Message.setProto3IntField(this, 66, value);
};


/**
 * optional string odds_scope = 67;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getOddsScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 67, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setOddsScope = function(value) {
  return jspb.Message.setProto3StringField(this, 67, value);
};


/**
 * optional string bookmaker_list_live_in_offer = 68;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getBookmakerListLiveInOffer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 68, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setBookmakerListLiveInOffer = function(value) {
  return jspb.Message.setProto3StringField(this, 68, value);
};


/**
 * optional string sort_key_str = 69;
 * @return {string}
 */
proto.eventFeed.v1.Event.prototype.getSortKeyStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 69, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.Event} returns this
 */
proto.eventFeed.v1.Event.prototype.setSortKeyStr = function(value) {
  return jspb.Message.setProto3StringField(this, 69, value);
};


goog.object.extend(exports, proto.eventFeed.v1);

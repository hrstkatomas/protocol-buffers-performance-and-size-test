// source: league.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var event_pb = require('./event_pb.js');
goog.object.extend(proto, event_pb);
goog.exportSymbol('proto.eventFeed.v1.League', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eventFeed.v1.League = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.eventFeed.v1.League.repeatedFields_, null);
};
goog.inherits(proto.eventFeed.v1.League, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eventFeed.v1.League.displayName = 'proto.eventFeed.v1.League';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.eventFeed.v1.League.repeatedFields_ = [24];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eventFeed.v1.League.prototype.toObject = function(opt_includeInstance) {
  return proto.eventFeed.v1.League.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eventFeed.v1.League} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eventFeed.v1.League.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    templateId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    countryId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countryName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    id: jspb.Message.getFieldWithDefault(msg, 5, ""),
    templateType: jspb.Message.getFieldWithDefault(msg, 6, ""),
    tournamentDi: jspb.Message.getFieldWithDefault(msg, 7, ""),
    sourceType: jspb.Message.getFieldWithDefault(msg, 8, ""),
    hasLiveTable: jspb.Message.getFieldWithDefault(msg, 9, ""),
    statType: jspb.Message.getFieldWithDefault(msg, 10, ""),
    templateKey: jspb.Message.getFieldWithDefault(msg, 11, ""),
    sportStageType: jspb.Message.getFieldWithDefault(msg, 12, ""),
    templateUrl: jspb.Message.getFieldWithDefault(msg, 13, ""),
    image: jspb.Message.getFieldWithDefault(msg, 14, ""),
    sortKey: jspb.Message.getFieldWithDefault(msg, 15, ""),
    stageCount: jspb.Message.getFieldWithDefault(msg, 16, ""),
    hasStandingsStage: jspb.Message.getFieldWithDefault(msg, 17, ""),
    categoryCaption: jspb.Message.getFieldWithDefault(msg, 18, ""),
    display: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    gCount: jspb.Message.getFieldWithDefault(msg, 20, 0),
    sportId: jspb.Message.getFieldWithDefault(msg, 21, ""),
    sport: jspb.Message.getFieldWithDefault(msg, 22, ""),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    event_pb.Event.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eventFeed.v1.League}
 */
proto.eventFeed.v1.League.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eventFeed.v1.League;
  return proto.eventFeed.v1.League.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eventFeed.v1.League} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eventFeed.v1.League}
 */
proto.eventFeed.v1.League.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplateId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplateType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTournamentDi(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setHasLiveTable(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplateKey(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSportStageType(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplateUrl(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortKey(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setStageCount(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setHasStandingsStage(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryCaption(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisplay(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGCount(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setSportId(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setSport(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    case 24:
      var value = new event_pb.Event;
      reader.readMessage(value,event_pb.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eventFeed.v1.League.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eventFeed.v1.League.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eventFeed.v1.League} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eventFeed.v1.League.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTemplateId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountryId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountryName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTemplateType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTournamentDi();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSourceType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHasLiveTable();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTemplateKey();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSportStageType();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTemplateUrl();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getSortKey();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getStageCount();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getHasStandingsStage();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getCategoryCaption();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getDisplay();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getGCount();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getSportId();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getSport();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      24,
      f,
      event_pb.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string template_id = 2;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getTemplateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setTemplateId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string country_id = 3;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getCountryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setCountryId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string country_name = 4;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getCountryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setCountryName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string id = 5;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string template_type = 6;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getTemplateType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setTemplateType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string tournament_di = 7;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getTournamentDi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setTournamentDi = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string source_type = 8;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getSourceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setSourceType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string has_live_table = 9;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getHasLiveTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setHasLiveTable = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string stat_type = 10;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getStatType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setStatType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string template_key = 11;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getTemplateKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setTemplateKey = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string sport_stage_type = 12;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getSportStageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setSportStageType = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string template_url = 13;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getTemplateUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setTemplateUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string image = 14;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string sort_key = 15;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getSortKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setSortKey = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string stage_count = 16;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getStageCount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setStageCount = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string has_standings_stage = 17;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getHasStandingsStage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setHasStandingsStage = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string category_caption = 18;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getCategoryCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setCategoryCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional bool display = 19;
 * @return {boolean}
 */
proto.eventFeed.v1.League.prototype.getDisplay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setDisplay = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional int32 g_count = 20;
 * @return {number}
 */
proto.eventFeed.v1.League.prototype.getGCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setGCount = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string sport_id = 21;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getSportId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setSportId = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string sport = 22;
 * @return {string}
 */
proto.eventFeed.v1.League.prototype.getSport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setSport = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional bool is_valid = 23;
 * @return {boolean}
 */
proto.eventFeed.v1.League.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * repeated Event events = 24;
 * @return {!Array<!proto.eventFeed.v1.Event>}
 */
proto.eventFeed.v1.League.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.eventFeed.v1.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, event_pb.Event, 24));
};


/**
 * @param {!Array<!proto.eventFeed.v1.Event>} value
 * @return {!proto.eventFeed.v1.League} returns this
*/
proto.eventFeed.v1.League.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 24, value);
};


/**
 * @param {!proto.eventFeed.v1.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.eventFeed.v1.Event}
 */
proto.eventFeed.v1.League.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 24, opt_value, proto.eventFeed.v1.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.eventFeed.v1.League} returns this
 */
proto.eventFeed.v1.League.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


goog.object.extend(exports, proto.eventFeed.v1);
